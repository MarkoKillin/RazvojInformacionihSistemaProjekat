package com.mudl.backend.controllers;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.mudl.backend.exceptions.InvalidMethodParameterException;
import com.mudl.backend.services.StudentService;

import jakarta.servlet.http.HttpServletRequest;
import model.Predmet;


/**
 * @author Marko Mirkovic
 * https://github.com/MarkoKillin
 * 
 * Purpose of this controller is to handle requests for "student" role
 * 
 * TODO
 * pregled zadataka, materijala, zadataka pred istek roka(drugacije markiranje), 
 * blub za studenta(file upload, menjanje baze)
 * glasa na anketi
 * 
 */

@Controller
@RequestMapping("/student/")
public class StudentController {
	
	@Autowired
	private StudentService ss;
	
	@GetMapping("getPredmetForStudent")
	public String getPredmetForStudent(HttpServletRequest req, Principal p) {
		List<Predmet> lp = ss.getPredmetForStudent(ss.getStudent(p.getName()));
		req.setAttribute("listPredmet", lp);
		return "home";
	}
	
	@GetMapping("prikazPredmeta")
	public String prikazPredmeta(HttpServletRequest req, Principal p, @RequestParam("idPredmet") int idPredmet) {
		req.getSession().setAttribute("predmet", ss.findPredmetById(idPredmet));
		return "prikaz_predmeta";
	}
	
	@GetMapping("getUrediProfil")
	public String getUrediProfil(HttpServletRequest req, Principal p) {
		req.setAttribute("profil", ss.getKorisnikByUsername(p.getName()));
		return "uredi_profil";
	}
	
	@GetMapping("getUpdateProfile")
	public String getUpdateProfile(HttpServletRequest req, Principal p) {
		req.setAttribute("profil", ss.getKorisnikByUsername(p.getName()));
		return "uredi_profil";
	}
	
	@PostMapping("updateProfile")
	public String updateProfile(HttpServletRequest req, @RequestParam("ime") String ime, @RequestParam("prezime") String prezime,
			@RequestParam("email") String email, @RequestParam("username") String username, @RequestParam("password") String password,
			@RequestParam("npassword") String npassword, Principal p) {
		int id = -1;
		try {
			id = s.updateProfile(ime, prezime, email, username, password, npassword, p);
			if (id == -1)
				req.setAttribute("message", "Došlo je do greške prilikom čuvanja.");
			else
				req.setAttribute("message", "Uspešno čuvanje. Id korisnika je: " + id);
		} catch (InvalidMethodParameterException e) {
			req.setAttribute("message", e.getMessage());
		}
		return "home";
	}

	@GetMapping("home")
	public String getHomePage() {
		return "home";
	}
	
	@GetMapping("o_nama")
	public String getNas() {
		return "o_nama";
	}
}
